
# *************************************************Тема урока**********************************************************
# *******************************************( БАЗОВЫЕ СТРУКТУРЫ )*****************************************************

# -----------------------------------'В этом уроке изучаем четыре типа данных'--------------------------------------------
print # (print) (печать) - команда для вывода информации на экран
type  # (type) - команда  для определения типа данных
# Запятая ( , ) -  является разделителем с помощью которой можно писать разные типы данных в одну строку
print(1, 2, 3, 4,  "Heloo", True, 'World')
# Кавычки ( " ) ( ' ) автомотически переводят тип данных в текстовой
print # - Относится к неизменяемым типам данных
# решения в скобках (2 * 2) являются приаритетом
# _________________________________________________ ТЕКСТ _____________________________________________________________
'str' # string - строка
print(type('Hello World'))
print('Hello,' + 'World') # - cтроки подерживают операции сложения ( конкатенация ) "conkatenate'  (Hello,World)
print('Hello World') # При работе с текстом, в начале и в конце фразы обязательно стаятся кавычки.
print('Hello "World"' "'Hello' World") # если внутри фразы ставим кавычки то они должны отличаться от тех которыми открывали
print('Hello mai neim is "Den"') # - Привет меня зовут "Денис"
print("I am '47 years old'") # - Мне '47 лет'

# _________________________________________________ ЧИСЛА _____________________________________________________________

#                                                Целые числа
'int' # целые числа
print(1, 2, 3, 4, 5, 5, 78)
print(type(5)) # - <class 'int'> - integer тип числа ( целое число )
print(5 + 5) # - сложение - знак '+' ( итог = 10 )
print(5 * 5) # - умножение - знак '*' ( итог = 25 )
print(5 - 5) # - вычетание - знак '-' ( итог = 0 )
print(5 / 5) # - деление - знак '/' ( итог = 1.0 )
print(5 // 5) # - целочисленное деление - знаки '//' ( итог = 1 )
print(5 % 5) # - остаток от деления '%' ( итог = 0 ) можно проверить число ( четное или не четное)
print(5 ** 5) # - возведенте в степень '**' (итог = 3125 )

#                                                Дробные числа
'float' # дробные числа
print(2.0, 3.1, 4.8)
print(type( 2.0)) # <class 'float'> ( тип числа с плавующей точкой. )
print(2.0 + 2.0) # сложение - знак '+' ( итог = 4.0 )
print(2.0 + 2) # сложение - знак '+' ( итог = 4.0 ) при выполнении операции итог не меняется
print(2 + 2.0) # сложение - знак '+' ( итог = 4.0 ) при выполнении операции итог не меняется
print

#____________________________________________ ЛОГИЧЕСКИЙ ТИП ДАННЫХ ___________________________________________________
'boolean' # логический тип данных
True # - истина,
False # - ложь
print(type(True),type(False)) #boolean <class 'bool'> <class 'bool'>
print(5 > 10) # False - не верно ( ложь )
print(5 < 10) # Trye - верно ( истина )
print(5 > 10, 5 < 10) # False - Trye
print(5 >= 10, 5 <= 10, 5 == 10) # - False True False
print(5 != 10) # восклицательным знаком ( ! ) мы проверяем что один обЬект не равен другому

# _____________________________________________ СЛОЖНЫЕ ВЫРАЖЕНИЯ _____________________________________________________
'and' # ( И ) - строгий оператор
'or' # ( Или ) - не строгий оператор
print(8 > 4 and 8 != 4) # - True
print(8 > 4 and 4 != 4) # False
print(9 != 9 or 3 < 8)  # Trye - при не строгом операторе, если хоть одно выражение верное то будет Trye ( истина )
print(7 == 3 and 7 < 6 and 4 > 1 ) # False - при строгом операторе если хоть одно выражение не верное будет False ( ложь )
print

# __________________________________________________ ЛАЙФХАК __________________________________________________________

print ('7') # - чтобы перевести в числовое, строчное или логическое  выражение используем ( int, str, float, bool )
print(type(int('7'))) # - <class 'int'>
print(type(str('7'))) # - <class 'str'>
print(type(float('7'))) # - <class 'float'>
print(type(bool('7'))) # - <class 'bool'>
#                                                    ВНИМАНИЕ!
# Не возможно перевести фразы в число и на оборот
# Основные арифметические действия: +, -, *, /, //, %, **.
# Основные операторы сравнения: <, >, ==, !=, <=, >=.
# Логические операторы: or, and.
